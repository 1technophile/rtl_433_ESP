acurite.c:r_device acurite_rain_896 = {
acurite.c:        .name        = "Acurite 896 Rain Gauge",
acurite.c:        .modulation  = OOK_PULSE_PPM,
acurite.c:        .decode_fn   = &acurite_rain_896_decode,
acurite.c:r_device acurite_th = {
acurite.c:        .name        = "Acurite 609TXC Temperature and Humidity Sensor",
acurite.c:        .modulation  = OOK_PULSE_PPM,
acurite.c:        .decode_fn   = &acurite_th_decode,
acurite.c:r_device acurite_txr = {
acurite.c:        .name        = "Acurite 592TXR Temp/Humidity, 5n1 Weather Station, 6045 Lightning, 3N1, Atlas",
acurite.c:        .modulation  = OOK_PULSE_PWM,
acurite.c:        .decode_fn   = &acurite_txr_decode,
acurite.c:r_device acurite_986 = {
acurite.c:        .name        = "Acurite 986 Refrigerator / Freezer Thermometer",
acurite.c:        .modulation  = OOK_PULSE_PPM,
acurite.c:        .decode_fn   = &acurite_986_decode,
acurite.c://.modulation     = OOK_PULSE_PWM,
acurite.c:r_device acurite_606 = {
acurite.c:        .name        = "Acurite 606TX Temperature Sensor",
acurite.c:        .modulation  = OOK_PULSE_PPM,
acurite.c:        .decode_fn   = &acurite_606_decode,
acurite.c:r_device acurite_00275rm = {
acurite.c:        .name        = "Acurite 00275rm,00276rm Temp/Humidity with optional probe",
acurite.c:        .modulation  = OOK_PULSE_PWM,
acurite.c:        .decode_fn   = &acurite_00275rm_decode,
acurite.c:r_device acurite_590tx = {
acurite.c:        .name        = "Acurite 590TX Temperature with optional Humidity",
acurite.c:        .modulation  = OOK_PULSE_PPM, //OOK_PULSE_PWM,
acurite.c:        .decode_fn   = &acurite_590tx_decode,
akhan_100F14.c:r_device akhan_100F14 = {
akhan_100F14.c:    .name          = "Akhan 100F14 remote keyless entry",
akhan_100F14.c:    .modulation    = OOK_PULSE_PWM,
akhan_100F14.c:    .decode_fn     = &akhan_rke_callback,
alecto.c:r_device alectov1 = {
alecto.c:    .name           = "AlectoV1 Weather Sensor (Alecto WS3500 WS4500 Ventus W155/W044 Oregon)",
alecto.c:    .modulation     = OOK_PULSE_PPM,
alecto.c:    .decode_fn      = &alectov1_callback,
ambientweather_tx8300.c:r_device ambientweather_tx8300 = {
ambientweather_tx8300.c:        .name        = "Ambient Weather TX-8300 Temperature/Humidity Sensor",
ambientweather_tx8300.c:        .modulation  = OOK_PULSE_PPM,
ambientweather_tx8300.c:        .decode_fn   = &ambientweather_tx8300_callback,
auriol_afw2a1.c:r_device auriol_afw2a1 = {
auriol_afw2a1.c:        .name        = "Auriol AFW2A1 temperature/humidity sensor",
auriol_afw2a1.c:        .modulation  = OOK_PULSE_PPM,
auriol_afw2a1.c:        .decode_fn   = &auriol_afw2a1_decode,
auriol_ahfl.c:r_device auriol_ahfl = {
auriol_ahfl.c:        .name        = "Auriol AHFL temperature/humidity sensor",
auriol_ahfl.c:        .modulation  = OOK_PULSE_PPM,
auriol_ahfl.c:        .decode_fn   = &auriol_ahfl_decode,
auriol_hg02832.c:r_device auriol_hg02832 = {
auriol_hg02832.c:        .name        = "Auriol HG02832, HG05124A-DCF, Rubicson 48957 temperature/humidity sensor",
auriol_hg02832.c:        .modulation  = OOK_PULSE_PWM,
auriol_hg02832.c:        .decode_fn   = &auriol_hg02832_decode,
blueline.c:r_device blueline;
blueline.c:r_device blueline = {
blueline.c:        .name        = "BlueLine Power Monitor",
blueline.c:        .modulation  = OOK_PULSE_PPM,
blueline.c:        .decode_fn   = &blueline_decode,
blyss.c:r_device blyss = {
blyss.c:    .name           = "Blyss DC5-UK-WH",
blyss.c:    .modulation     = OOK_PULSE_PWM,
blyss.c:    .decode_fn      = &blyss_callback,
brennenstuhl_rcs_2044.c:r_device brennenstuhl_rcs_2044 = {
brennenstuhl_rcs_2044.c:    .name          = "Brennenstuhl RCS 2044",
brennenstuhl_rcs_2044.c:    .modulation    = OOK_PULSE_PWM,
brennenstuhl_rcs_2044.c:    .decode_fn     = &brennenstuhl_rcs_2044_callback,
bresser_3ch.c:r_device bresser_3ch = {
bresser_3ch.c:        .name        = "Bresser Thermo-/Hygro-Sensor 3CH",
bresser_3ch.c:        .modulation  = OOK_PULSE_PWM,
bresser_3ch.c:        .decode_fn   = &bresser_3ch_decode,
bt_rain.c:r_device bt_rain = {
bt_rain.c:        .name        = "Biltema rain gauge",
bt_rain.c:        .modulation  = OOK_PULSE_PPM,
bt_rain.c:        .decode_fn   = &bt_rain_decode,
burnhardbbq.c:r_device burnhardbbq = {
burnhardbbq.c:        .name        = "Burnhard BBQ thermometer",
burnhardbbq.c:        .modulation  = OOK_PULSE_PWM,
burnhardbbq.c:        .decode_fn   = &burnhardbbq_decode,
calibeur.c:r_device calibeur_RF104 = {
calibeur.c:    .name           = "Calibeur RF-104 Sensor",
calibeur.c:    .modulation     = OOK_PULSE_PWM,
calibeur.c:    .decode_fn      = &calibeur_rf104_callback,
cardin.c:r_device cardin = {
cardin.c:    .name           = "Cardin S466-TX2",
cardin.c:    .modulation     = OOK_PULSE_PWM,
cardin.c:    .decode_fn      = &cardin_callback,
chuango.c:r_device chuango = {
chuango.c:    .name           = "Chuango Security Technology",
chuango.c:    .modulation     = OOK_PULSE_PWM,
chuango.c:    .decode_fn      = &chuango_callback,
companion_wtr001.c:r_device companion_wtr001 = {
companion_wtr001.c:        .name        = "Companion WTR001 Temperature Sensor",
companion_wtr001.c:        .modulation  = OOK_PULSE_PWM,
companion_wtr001.c:        .decode_fn   = &companion_wtr001_decode,
digitech_xc0324.c:r_device digitech_xc0324 = {
digitech_xc0324.c:    .name           = "Digitech XC-0324 temperature sensor",
digitech_xc0324.c:    .modulation     = OOK_PULSE_PPM,
digitech_xc0324.c:    .decode_fn      = &xc0324_callback,
dish_remote_6_3.c:r_device dish_remote_6_3 = {
dish_remote_6_3.c:    .name          = "Dish remote 6.3",
dish_remote_6_3.c:    .modulation    = OOK_PULSE_PPM,
dish_remote_6_3.c:    .decode_fn     = &dish_remote_6_3_callback,
ecowitt.c:r_device ecowitt = {
ecowitt.c:        .name        = "Ecowitt Wireless Outdoor Thermometer WH53/WH0280/WH0281A",
ecowitt.c:        .modulation  = OOK_PULSE_PWM,
ecowitt.c:        .decode_fn   = &ecowitt_decode,
efth800.c:r_device eurochron_efth800 = {
efth800.c:        .name          = "Eurochron EFTH-800 temperature and humidity sensor",
efth800.c:        .modulation    = OOK_PULSE_PWM,
efth800.c:        .decode_fn     = &eurochron_efth800_decode,
elro_db286a.c:r_device elro_db286a = {
elro_db286a.c:    .name           = "Elro DB286A Doorbell",
elro_db286a.c:    .modulation     = OOK_PULSE_PWM,
elro_db286a.c:    .decode_fn      = &elro_db286a_callback,
elv.c:r_device elv_em1000 = {
elv.c:    .name           = "ELV EM 1000",
elv.c:    .modulation     = OOK_PULSE_PPM,
elv.c:    .decode_fn      = &em1000_callback,
elv.c:r_device elv_ws2000 = {
elv.c:        .name        = "ELV WS 2000",
elv.c:        .modulation  = OOK_PULSE_PWM,
elv.c:        .decode_fn   = &ws2000_callback,
esperanza_ews.c:r_device esperanza_ews = {
esperanza_ews.c:    .name           = "Esperanza EWS",
esperanza_ews.c:    .modulation     = OOK_PULSE_PPM,
esperanza_ews.c:    .decode_fn      = &esperanza_ews_callback,
eurochron.c:r_device eurochron = {
eurochron.c:        .name          = "Eurochron temperature and humidity sensor",
eurochron.c:        .modulation    = OOK_PULSE_PPM,
eurochron.c:        .decode_fn     = &eurochron_decode,
fineoffset.c:r_device fineoffset_WH2;
fineoffset.c:r_device fineoffset_WH2 = {
fineoffset.c:    .name           = "Fine Offset Electronics, WH2, WH5, Telldus Temperature/Humidity/Rain Sensor",
fineoffset.c:    .modulation     = OOK_PULSE_PWM,
fineoffset.c:    .decode_fn      = &fineoffset_WH2_callback,
fineoffset.c:r_device fineoffset_WH25 = {
fineoffset.c:    .name           = "Fine Offset Electronics, WH25, WH32B, WH24, WH65B, HP1000 Temperature/Humidity/Pressure Sensor",
fineoffset.c:    .modulation     = FSK_PULSE_PCM,
fineoffset.c:    .decode_fn      = &fineoffset_WH25_callback,
fineoffset.c:r_device fineoffset_WH51 = {
fineoffset.c:    .name           = "Fine Offset Electronics/ECOWITT WH51 Soil Moisture Sensor",
fineoffset.c:    .modulation     = FSK_PULSE_PCM,
fineoffset.c:    .decode_fn      = &fineoffset_WH51_callback,
fineoffset.c:r_device fineoffset_WH0530 = {
fineoffset.c:    .name           = "Fine Offset Electronics, WH0530 Temperature/Rain Sensor",
fineoffset.c:    .modulation     = OOK_PULSE_PWM,
fineoffset.c:    .decode_fn      = &fineoffset_WH0530_callback,
fineoffset_wh1050.c:r_device fineoffset_wh1050 = {
fineoffset_wh1050.c:    .name           = "Fine Offset WH1050 Weather Station",
fineoffset_wh1050.c:    .modulation     = OOK_PULSE_PWM,
fineoffset_wh1050.c:    .decode_fn      = &fineoffset_wh1050_callback,
fineoffset_wh1080.c:r_device fineoffset_wh1080 = {
fineoffset_wh1080.c:        .name        = "Fine Offset Electronics WH1080/WH3080 Weather Station",
fineoffset_wh1080.c:        .modulation  = OOK_PULSE_PWM,
fineoffset_wh1080.c:        .decode_fn   = &fineoffset_wh1080_callback_ook,
fineoffset_wh1080.c:r_device fineoffset_wh1080_fsk = {
fineoffset_wh1080.c:        .name        = "Fine Offset Electronics WH1080/WH3080 Weather Station (FSK)",
fineoffset_wh1080.c:        .modulation  = FSK_PULSE_PCM,
fineoffset_wh1080.c:        .decode_fn   = &fineoffset_wh1080_callback_fsk,
fs20.c:r_device fs20 = {
fs20.c:        .name        = "FS20",
fs20.c:        .modulation  = OOK_PULSE_PPM,
fs20.c:        .decode_fn   = &fs20_decode,
ft004b.c:r_device ft004b = {
ft004b.c:        .name        = "FT-004-B Temperature Sensor",
ft004b.c:        .modulation  = OOK_PULSE_PPM,
ft004b.c:        .decode_fn   = &ft004b_callback,
generic_motion.c:r_device generic_motion = {
generic_motion.c:        .name        = "Generic wireless motion sensor",
generic_motion.c:        .modulation  = OOK_PULSE_PWM,
generic_motion.c:        .decode_fn   = &generic_motion_callback,
generic_remote.c:r_device generic_remote = {
generic_remote.c:        .name        = "Generic Remote SC226x EV1527",
generic_remote.c:        .modulation  = OOK_PULSE_PWM,
generic_remote.c:        .decode_fn   = &generic_remote_callback,
generic_temperature_sensor.c:r_device generic_temperature_sensor = {
generic_temperature_sensor.c:        .name        = "Generic temperature sensor 1",
generic_temperature_sensor.c:        .modulation  = OOK_PULSE_PPM,
generic_temperature_sensor.c:        .decode_fn   = &generic_temperature_sensor_callback,
gt_tmbbq05.c:r_device gt_tmbbq05 = {
gt_tmbbq05.c:        .name        = "Globaltronics QUIGG GT-TMBBQ-05",
gt_tmbbq05.c:        .modulation  = OOK_PULSE_PPM,
gt_tmbbq05.c:        .decode_fn   = &gt_tmbbq05_decode,
gt_wt_02.c:r_device gt_wt_02 = {
gt_wt_02.c:        .name        = "Globaltronics GT-WT-02 Sensor",
gt_wt_02.c:        .modulation  = OOK_PULSE_PPM,
gt_wt_02.c:        .decode_fn   = &gt_wt_02_decode,
gt_wt_03.c:r_device gt_wt_03 = {
gt_wt_03.c:        .name        = "Globaltronics GT-WT-03 Sensor",
gt_wt_03.c:        .modulation  = OOK_PULSE_PWM,
gt_wt_03.c:        .decode_fn   = &gt_wt_03_decode,
hcs200.c:r_device hcs200 = {
hcs200.c:        .name        = "Microchip HCS200 KeeLoq Hopping Encoder based remotes",
hcs200.c:        .modulation  = OOK_PULSE_PWM,
hcs200.c:        .decode_fn   = &hcs200_callback,
honeywell_wdb.c:r_device honeywell_wdb = {
honeywell_wdb.c:        .name        = "Honeywell ActivLink, Wireless Doorbell",
honeywell_wdb.c:        .modulation  = OOK_PULSE_PWM,
honeywell_wdb.c:        .decode_fn   = &honeywell_wdb_callback,
honeywell_wdb.c:r_device honeywell_wdb_fsk = {
honeywell_wdb.c:        .name        = "Honeywell ActivLink, Wireless Doorbell (FSK)",
honeywell_wdb.c:        .modulation  = FSK_PULSE_PWM,
honeywell_wdb.c:        .decode_fn   = &honeywell_wdb_callback,
ht680.c:r_device ht680 = {
ht680.c:        .name        = "HT680 Remote control",
ht680.c:        .modulation  = OOK_PULSE_PWM,
ht680.c:        .decode_fn   = &ht680_callback,
infactory.c:r_device infactory = {
infactory.c:        .name        = "inFactory, nor-tec, FreeTec NC-3982-913 temperature humidity sensor",
infactory.c:        .modulation  = OOK_PULSE_PPM,
infactory.c:        .decode_fn   = &infactory_callback,
inovalley-kw9015b.c:r_device kw9015b = {
inovalley-kw9015b.c:        .name        = "Inovalley kw9015b, TFA Dostmann 30.3161 (Rain and temperature sensor)",
inovalley-kw9015b.c:        .modulation  = OOK_PULSE_PPM,
inovalley-kw9015b.c:        .decode_fn   = &kw9015b_callback,
interlogix.c:r_device interlogix = {
interlogix.c:        .name        = "Interlogix GE UTC Security Devices",
interlogix.c:        .modulation  = OOK_PULSE_PPM,
interlogix.c:        .decode_fn   = &interlogix_callback,
intertechno.c:r_device intertechno = {
intertechno.c:    .name           = "Intertechno 433",
intertechno.c:    .modulation     = OOK_PULSE_PPM,
intertechno.c:    .decode_fn      = &intertechno_callback,
kedsum.c:r_device kedsum = {
kedsum.c:    .name           = "Kedsum Temperature & Humidity Sensor, Pearl NC-7415",
kedsum.c:    .modulation     = OOK_PULSE_PPM,
kedsum.c:    .decode_fn      = &kedsum_callback,
kerui.c:r_device kerui = {
kerui.c:        .name        = "Kerui PIR / Contact Sensor",
kerui.c:        .modulation  = OOK_PULSE_PWM,
kerui.c:        .decode_fn   = &kerui_callback,
lacrosse.c:r_device lacrossetx = {
lacrosse.c:        .name        = "LaCrosse TX Temperature / Humidity Sensor",
lacrosse.c:        .modulation  = OOK_PULSE_PWM,
lacrosse.c:        .decode_fn   = &lacrossetx_decode,
lacrosse_tx141x.c:r_device lacrosse_tx141x = {
lacrosse_tx141x.c:        .name        = "LaCrosse TX141-Bv2, TX141TH-Bv2, TX141-Bv3, TX141W, TX145wsdth sensor",
lacrosse_tx141x.c:        .modulation  = OOK_PULSE_PWM,
lacrosse_tx141x.c:        .decode_fn   = &lacrosse_tx141x_decode,
lacrosse_ws7000.c:r_device lacrosse_ws7000 = {
lacrosse_ws7000.c:        .name        = "LaCrosse/ELV/Conrad WS7000/WS2500 weather sensors",
lacrosse_ws7000.c:        .modulation  = OOK_PULSE_PWM,
lacrosse_ws7000.c:        .decode_fn   = &lacrosse_ws7000_decode,
lacrossews.c:r_device lacrossews = {
lacrossews.c:        .name        = "LaCrosse WS-2310 / WS-3600 Weather Station",
lacrossews.c:        .modulation  = OOK_PULSE_PWM,
lacrossews.c:        .decode_fn   = &lacrossews_callback,
lightwave_rf.c:r_device lightwave_rf = {
lightwave_rf.c:        .name        = "LightwaveRF",
lightwave_rf.c:        .modulation  = OOK_PULSE_PPM,
lightwave_rf.c:        .decode_fn   = &lightwave_rf_callback,
maverick_et73.c:r_device maverick_et73 = {
maverick_et73.c:        .name        = "Maverick et73",
maverick_et73.c:        .modulation  = OOK_PULSE_PPM,
maverick_et73.c:        .decode_fn   = &maverick_et73_sensor_callback,
mebus.c:r_device mebus433 = {
mebus.c:    .name           = "Mebus 433",
mebus.c:    .modulation     = OOK_PULSE_PPM,
mebus.c:    .decode_fn      = &mebus433_callback,
missil_ml0757.c:r_device missil_ml0757 = {
missil_ml0757.c:        .name        = "Missil ML0757 weather station",
missil_ml0757.c:        .modulation  = OOK_PULSE_PPM,
missil_ml0757.c:        .decode_fn   = &missil_ml0757_callback,
new_template.c:r_device new_template = {
new_template.c:        .name        = "Template decoder",
new_template.c:        .modulation  = OOK_PULSE_PPM,
new_template.c:        .decode_fn   = &new_template_decode,
newkaku.c:r_device newkaku = {
newkaku.c:        .name        = "KlikAanKlikUit Wireless Switch",
newkaku.c:        .modulation  = OOK_PULSE_PPM,
newkaku.c:        .decode_fn   = &newkaku_callback,
nexa.c:r_device nexa = {
nexa.c:        .name        = "Nexa",
nexa.c:        .modulation  = OOK_PULSE_PPM,
nexa.c:        .decode_fn   = &nexa_callback,
nexus.c:r_device nexus = {
nexus.c:        .name        = "Nexus, FreeTec NC-7345, NX-3980, Solight TE82S, TFA 30.3209 temperature/humidity sensor",
nexus.c:        .modulation  = OOK_PULSE_PPM,
nexus.c:        .decode_fn   = &nexus_callback,
nice_flor_s.c:r_device nice_flor_s = {
nice_flor_s.c:        .name        = "Nice Flor-s remote control for gates",
nice_flor_s.c:        .modulation  = OOK_PULSE_PWM,
nice_flor_s.c:        .decode_fn   = &nice_flor_s_decode,
opus_xt300.c:r_device opus_xt300 = {
opus_xt300.c:        .name        = "Opus/Imagintronix XT300 Soil Moisture",
opus_xt300.c:        .modulation  = OOK_PULSE_PWM,
opus_xt300.c:        .decode_fn   = &opus_xt300_decode,
oregon_scientific_sl109h.c:r_device oregon_scientific_sl109h = {
oregon_scientific_sl109h.c:        .name        = "Oregon Scientific SL109H Remote Thermal Hygro Sensor",
oregon_scientific_sl109h.c:        .modulation  = OOK_PULSE_PPM,
oregon_scientific_sl109h.c:        .decode_fn   = &oregon_scientific_sl109h_callback,
oregon_scientific_v1.c:r_device oregon_scientific_v1 = {
oregon_scientific_v1.c:    .name           = "OSv1 Temperature Sensor",
oregon_scientific_v1.c:    .modulation     = OOK_PULSE_PWM_OSV1,
oregon_scientific_v1.c:    .decode_fn      = &oregon_scientific_v1_callback,
philips_aj3650.c:r_device philips_aj3650 = {
philips_aj3650.c:        .name        = "Philips outdoor temperature sensor (type AJ3650)",
philips_aj3650.c:        .modulation  = OOK_PULSE_PWM,
philips_aj3650.c:        .decode_fn   = &philips_aj3650_decode,
philips_aj7010.c:r_device philips_aj7010 = {
philips_aj7010.c:        .name        = "Philips outdoor temperature sensor (type AJ7010)",
philips_aj7010.c:        .modulation  = OOK_PULSE_PWM,
philips_aj7010.c:        .decode_fn   = &philips_aj7010_decode,
prologue.c:r_device prologue = {
prologue.c:        .name        = "Prologue, FreeTec NC-7104, NC-7159-675 temperature sensor",
prologue.c:        .modulation  = OOK_PULSE_PPM,
prologue.c:        .decode_fn   = &prologue_callback,
proove.c:r_device proove = {
proove.c:        .name        = "Proove / Nexa / KlikAanKlikUit Wireless Switch",
proove.c:        .modulation  = OOK_PULSE_PPM,
proove.c:        .decode_fn   = &proove_callback,
quhwa.c:r_device quhwa = {
quhwa.c:    .name          = "Quhwa",
quhwa.c:    .modulation    = OOK_PULSE_PWM,
quhwa.c:    .decode_fn     = &quhwa_callback,
rftech.c:r_device rftech = {
rftech.c:        .name        = "RF-tech",
rftech.c:        .modulation  = OOK_PULSE_PPM,
rftech.c:        .decode_fn   = &rftech_callback,
rubicson.c:r_device rubicson = {
rubicson.c:        .name        = "Rubicson Temperature Sensor",
rubicson.c:        .modulation  = OOK_PULSE_PPM,
rubicson.c:        .decode_fn   = &rubicson_callback,
rubicson_48659.c:r_device rubicson_48659 = {
rubicson_48659.c:        .name        = "Rubicson 48659 Thermometer",
rubicson_48659.c:        .modulation  = OOK_PULSE_PPM,
rubicson_48659.c:        .decode_fn   = &rubicson_48659_decode,
s3318p.c:r_device s3318p = {
s3318p.c:    .name           = "Conrad S3318P, FreeTec NC-5849-913 temperature humidity sensor",
s3318p.c:    .modulation     = OOK_PULSE_PPM,
s3318p.c:    .decode_fn      = &s3318p_callback,
silvercrest.c:r_device silvercrest = {
silvercrest.c:        .name        = "Silvercrest Remote Control",
silvercrest.c:        .modulation  = OOK_PULSE_PWM,
silvercrest.c:        .decode_fn   = &silvercrest_callback,
skylink_ha-434tl.c:r_device skylink_motion = {
skylink_ha-434tl.c:    .name = "Skylink HA-434TL motion sensor",
skylink_ha-434tl.c:    .modulation = OOK_PULSE_PPM,
skylink_ha-434tl.c:    .decode_fn = &skylink_motion_callback,
smoke_gs558.c:r_device smoke_gs558 = {
smoke_gs558.c:    .name           = "Wireless Smoke and Heat Detector GS 558",
smoke_gs558.c:    .modulation     = OOK_PULSE_PWM,
smoke_gs558.c:    .decode_fn      = &smoke_gs558_callback,
solight_te44.c:r_device solight_te44 = {
solight_te44.c:        .name        = "Solight TE44/TE66, EMOS E0107T, NX-6876-917",
solight_te44.c:        .modulation  = OOK_PULSE_PPM,
solight_te44.c:        .decode_fn   = &solight_te44_callback,
springfield.c:r_device springfield = {
springfield.c:        .name        = "Springfield Temperature and Soil Moisture",
springfield.c:        .modulation  = OOK_PULSE_PPM,
springfield.c:        .decode_fn   = &springfield_decode,
tfa_30_3221.c:r_device tfa_30_3221 = {
tfa_30_3221.c:        .name        = "TFA Dostmann 30.3221.02 T/H Outdoor Sensor",
tfa_30_3221.c:        .modulation  = OOK_PULSE_PWM,
tfa_30_3221.c:        .decode_fn   = &tfa_303221_callback,
tfa_drop_30.3233.c:r_device tfa_drop_303233 = {
tfa_drop_30.3233.c:        .name        = "TFA Drop Rain Gauge 30.3233.01",
tfa_drop_30.3233.c:        .modulation  = OOK_PULSE_PWM,
tfa_drop_30.3233.c:        .decode_fn   = &tfa_drop_303233_decode,
tfa_pool_thermometer.c:r_device tfa_pool_thermometer = {
tfa_pool_thermometer.c:        .name        = "TFA pool temperature sensor",
tfa_pool_thermometer.c:        .modulation  = OOK_PULSE_PPM,
tfa_pool_thermometer.c:        .decode_fn   = &tfa_pool_thermometer_decode,
tfa_twin_plus_30.3049.c:r_device tfa_twin_plus_303049 = {
tfa_twin_plus_30.3049.c:    .name          = "TFA-Twin-Plus-30.3049, Conrad KW9010, Ea2 BL999",
tfa_twin_plus_30.3049.c:    .modulation    = OOK_PULSE_PPM,
tfa_twin_plus_30.3049.c:    .decode_fn     = &tfa_twin_plus_303049_callback,
thermopro_tp11.c:r_device thermopro_tp11 = {
thermopro_tp11.c:        .name        = "Thermopro TP11 Thermometer",
thermopro_tp11.c:        .modulation  = OOK_PULSE_PPM,
thermopro_tp11.c:        .decode_fn   = &thermopro_tp11_sensor_callback,
thermopro_tp12.c:r_device thermopro_tp12 = {
thermopro_tp12.c:        .name        = "Thermopro TP08/TP12/TP20 thermometer",
thermopro_tp12.c:        .modulation  = OOK_PULSE_PPM,
thermopro_tp12.c:        .decode_fn   = &thermopro_tp12_sensor_callback,
thermopro_tx2.c:r_device thermopro_tx2 = {
thermopro_tx2.c:        .name        = "ThermoPro-TX2 temperature sensor",
thermopro_tx2.c:        .modulation  = OOK_PULSE_PPM,
thermopro_tx2.c:        .decode_fn   = &thermopro_tx2_decode,
ts_ft002.c:r_device ts_ft002 = {
ts_ft002.c:        .name        = "TS-FT002 Wireless Ultrasonic Tank Liquid Level Meter With Temperature Sensor",
ts_ft002.c:        .modulation  = OOK_PULSE_PPM,
ts_ft002.c:        .decode_fn   = &ts_ft002_decoder,
visonic_powercode.c:r_device visonic_powercode = {
visonic_powercode.c:        .name        = "Visonic powercode",
visonic_powercode.c:        .modulation  = OOK_PULSE_PWM,
visonic_powercode.c:        .decode_fn   = &visonic_powercode_decode,
waveman.c:r_device waveman = {
waveman.c:    .name           = "Waveman Switch Transmitter",
waveman.c:    .modulation     = OOK_PULSE_PWM,
waveman.c:    .decode_fn      = &waveman_callback,
wg_pb12v1.c:r_device wg_pb12v1 = {
wg_pb12v1.c:        .name        = "WG-PB12V1 Temperature Sensor",
wg_pb12v1.c:        .modulation  = OOK_PULSE_PWM,
wg_pb12v1.c:        .decode_fn   = &wg_pb12v1_decode,
ws2032.c:r_device ws2032 = {
ws2032.c:        .name        = "WS2032 weather station",
ws2032.c:        .modulation  = OOK_PULSE_PWM,
ws2032.c:        .decode_fn   = &fineoffset_ws2032_decode,
wssensor.c:r_device wssensor = {
wssensor.c:        .name        = "Hyundai WS SENZOR Remote Temperature Sensor",
wssensor.c:        .modulation  = OOK_PULSE_PPM,
wssensor.c:        .decode_fn   = &wssensor_decode,
wt0124.c:r_device wt1024 = {
wt0124.c:        .name        = "WT0124 Pool Thermometer",
wt0124.c:        .modulation  = OOK_PULSE_PWM,
wt0124.c:        .decode_fn   = &wt1024_callback,
x10_rf.c:r_device X10_RF = {
x10_rf.c:        .name        = "X10 RF",
x10_rf.c:        .modulation  = OOK_PULSE_PPM,
x10_rf.c:        .decode_fn   = &x10_rf_callback,
x10_sec.c:r_device x10_sec = {
x10_sec.c:        .name        = "X10 Security",
x10_sec.c:        .modulation  = OOK_PULSE_PPM,
x10_sec.c:        .decode_fn   = &x10_sec_callback,
